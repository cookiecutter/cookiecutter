# .github/workflows/python-package.yml
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# CI using uv + just, with minimal/noise-free logs:
# - Colors forced inside a tiny wrapper script (not via step `env:`), so they don’t appear in the log header.
# - No echo/group commands shown.
# - Shared bootstrap steps are DRY via YAML anchors.

name: CI/CD Tests (version 2)

on:
  push:
    branches: [ main ]
    tags:
      - '*'   # matches any tag name
  pull_request:
    branches: [ main ]

env:
  COLUMNS: 150
  UV_FROZEN: true
  FORCE_COLOR: 1

# Cancel older runs for the same branch/PR (concurrency = run one at a time).
# When you push several commits in a row, only the newest run continues; older ones are cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Least-privilege token by default.
permissions:
  contents: read

# Consistent shell across OSes; override per-step if you need PowerShell/cmd.
# Only `run.shell` / `run.working-directory` are supported here.
defaults:
  run:
    shell: bash

jobs:
  # Define shared bootstrap once (never runs; used for anchors).
  _shared:
    if: ${{ false }}
    name: skipped
    runs-on: ubuntu-latest
    steps:
      - &checkout { uses: actions/checkout@v5 }
      - &setup_uv
        name: Install uv (with cache)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - &install_just
        name: Install just
        uses: taiki-e/install-action@just

  lint:
    name: Lint Checking • macOS (via just, uv, ruff)
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - *checkout
      - *setup_uv
      - *install_just
      - name: Lint Checking • macOS (via just, uv, ruff)
        run: just lint-check
#   type-check:
#     name: Type Checking • macOS (via just, uv, ty)
#     runs-on: macos-latest
#     timeout-minutes: 15
#     steps:
#       - *checkout
#       - *setup_uv
#       - *install_just
#       - name: Type Checking • macOS (via just, uv, ty)
#         run: just type-check
  test-all:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    name: Tests on Python versions 3.9–>3.13 • "${{ matrix.os }}" (via just, uv, pytest, pytest-pretty)
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - *checkout
      - *setup_uv
      - *install_just
      - name: "Tests on Python versions 3.10–>3.13 • ${{ matrix.os }}"
        run: just test-all
#   test-coverage:
#     name: Measuring Coverage • macOS (via just, uv, pytest, pytest-pretty, pytest-cov and coverage[toml])
#     runs-on: macos-latest
#     timeout-minutes: 25
#     steps:
#       - *checkout
#       - *setup_uv
#       - *install_just
#       - name: Measuring Coverage • macOS
#         run: just test-coverage
#   coverage-xml:
#     if: github.actor != 'dependabot[bot]'
#     name: Coverage with Codecov
#     runs-on: macos-latest
#     timeout-minutes: 25
#     steps:
#       - *checkout
#       - *setup_uv
#       - *install_just
#       - name: Generating an XML Coverage Report
#         run: just coverage-xml
#       - name: Upload Coverage Report to Codecov
#         uses: codecov/codecov-action@v5
#         with:
#           files: coverage.xml
#           fail_ci_if_error: true
#           token: ${{ secrets.CODECOV_TOKEN }}